/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : DiscoveryClient_DiscoveryClientFSM_sm.sm
 */

#include "urn_is4s_discovery_client_1_0/Messages/MessageSet.h"
#include "urn_is4s_discovery_client_1_0/DiscoveryClient_DiscoveryClientFSM.h"
#include "include/urn_is4s_discovery_client_1_0/DiscoveryClient_DiscoveryClientFSM_sm.h"

using namespace statemap;

namespace urn_is4s_discovery_client_1_0
{
    // Static class declarations.
    DiscoveryClient_DiscoveryClientFSM_SM_Ready DiscoveryClient_DiscoveryClientFSM_SM::Ready("DiscoveryClient_DiscoveryClientFSM_SM::Ready", 0);
    DiscoveryClient_DiscoveryClientFSM_SM_Internally_Generated_State_DO_NOT_USE DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE("DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE", 1);

    void DiscoveryClient_DiscoveryClientFSMState::GuiControlEnteredTransition(DiscoveryClient_DiscoveryClientFSMContext& context)
    {
        Default(context);
        return;
    }

    void DiscoveryClient_DiscoveryClientFSMState::GuiControlEnteredTransition(DiscoveryClient_DiscoveryClientFSMContext& context, GuiControlEntered msg)
    {
        Default(context);
        return;
    }

    void DiscoveryClient_DiscoveryClientFSMState::ReportConfigurationTransition(DiscoveryClient_DiscoveryClientFSMContext& context)
    {
        Default(context);
        return;
    }

    void DiscoveryClient_DiscoveryClientFSMState::ReportIdentificationTransition(DiscoveryClient_DiscoveryClientFSMContext& context)
    {
        Default(context);
        return;
    }

    void DiscoveryClient_DiscoveryClientFSMState::ReportIdentificationTransition(DiscoveryClient_DiscoveryClientFSMContext& context, ReportIdentification msg)
    {
        Default(context);
        return;
    }

    void DiscoveryClient_DiscoveryClientFSMState::ReportServiceListTransition(DiscoveryClient_DiscoveryClientFSMContext& context)
    {
        Default(context);
        return;
    }

    void DiscoveryClient_DiscoveryClientFSMState::ReportServicesTransition(DiscoveryClient_DiscoveryClientFSMContext& context)
    {
        Default(context);
        return;
    }

    void DiscoveryClient_DiscoveryClientFSMState::ReportServicesTransition(DiscoveryClient_DiscoveryClientFSMContext& context, ReportServices msg)
    {
        Default(context);
        return;
    }

    void DiscoveryClient_DiscoveryClientFSMState::ReportSubsystemListTransition(DiscoveryClient_DiscoveryClientFSMContext& context)
    {
        Default(context);
        return;
    }

    void DiscoveryClient_DiscoveryClientFSMState::Default(DiscoveryClient_DiscoveryClientFSMContext& context)
    {
        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "TRANSITION   : Default"
                << std::endl;
        }

        throw (
            TransitionUndefinedException(
                context.getState().getName(),
                context.getTransition()));

        return;
    }

    void DiscoveryClient_DiscoveryClientFSM_SM_Ready::GuiControlEnteredTransition(DiscoveryClient_DiscoveryClientFSMContext& context, GuiControlEntered msg)
    {
        DiscoveryClient_DiscoveryClientFSM& ctxt(context.getOwner());

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : DiscoveryClient_DiscoveryClientFSM_SM::Ready"
            << std::endl;
        }

        DiscoveryClient_DiscoveryClientFSMState& endState = context.getState();

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: DiscoveryClient_DiscoveryClientFSM_SM::Ready::GuiControlEnteredTransition(GuiControlEntered msg)"
                << std::endl;
        }

        context.clearState();
        try
        {
            ctxt.sendQueryMessageAction(msg);
            if (context.getDebugFlag() == true)
            {
                std::ostream& str = context.getDebugStream();

                str << "EXIT TRANSITION : DiscoveryClient_DiscoveryClientFSM_SM::Ready::GuiControlEnteredTransition(GuiControlEntered msg)"
                    << std::endl;
            }

            context.setState(endState);
        }
        catch (...)
        {
            context.setState(endState);
            throw;
        }

        return;
    }

    void DiscoveryClient_DiscoveryClientFSM_SM_Ready::ReportIdentificationTransition(DiscoveryClient_DiscoveryClientFSMContext& context, ReportIdentification msg)
    {
        DiscoveryClient_DiscoveryClientFSM& ctxt(context.getOwner());

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : DiscoveryClient_DiscoveryClientFSM_SM::Ready"
            << std::endl;
        }

        DiscoveryClient_DiscoveryClientFSMState& endState = context.getState();

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: DiscoveryClient_DiscoveryClientFSM_SM::Ready::ReportIdentificationTransition(ReportIdentification msg)"
                << std::endl;
        }

        context.clearState();
        try
        {
            ctxt.addDiscoveryServerAction(msg);
            if (context.getDebugFlag() == true)
            {
                std::ostream& str = context.getDebugStream();

                str << "EXIT TRANSITION : DiscoveryClient_DiscoveryClientFSM_SM::Ready::ReportIdentificationTransition(ReportIdentification msg)"
                    << std::endl;
            }

            context.setState(endState);
        }
        catch (...)
        {
            context.setState(endState);
            throw;
        }

        return;
    }

    void DiscoveryClient_DiscoveryClientFSM_SM_Ready::ReportServicesTransition(DiscoveryClient_DiscoveryClientFSMContext& context, ReportServices msg)
    {
        DiscoveryClient_DiscoveryClientFSM& ctxt(context.getOwner());

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : DiscoveryClient_DiscoveryClientFSM_SM::Ready"
            << std::endl;
        }

        DiscoveryClient_DiscoveryClientFSMState& endState = context.getState();

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: DiscoveryClient_DiscoveryClientFSM_SM::Ready::ReportServicesTransition(ReportServices msg)"
                << std::endl;
        }

        context.clearState();
        try
        {
            ctxt.saveServicesAction(msg);
            if (context.getDebugFlag() == true)
            {
                std::ostream& str = context.getDebugStream();

                str << "EXIT TRANSITION : DiscoveryClient_DiscoveryClientFSM_SM::Ready::ReportServicesTransition(ReportServices msg)"
                    << std::endl;
            }

            context.setState(endState);
        }
        catch (...)
        {
            context.setState(endState);
            throw;
        }

        return;
    }

    void DiscoveryClient_DiscoveryClientFSM_SM_Internally_Generated_State_DO_NOT_USE::GuiControlEnteredTransition(DiscoveryClient_DiscoveryClientFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE::GuiControlEnteredTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE::GuiControlEnteredTransition()"
                << std::endl;
        }


        return;
    }

    void DiscoveryClient_DiscoveryClientFSM_SM_Internally_Generated_State_DO_NOT_USE::ReportConfigurationTransition(DiscoveryClient_DiscoveryClientFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE::ReportConfigurationTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE::ReportConfigurationTransition()"
                << std::endl;
        }


        return;
    }

    void DiscoveryClient_DiscoveryClientFSM_SM_Internally_Generated_State_DO_NOT_USE::ReportIdentificationTransition(DiscoveryClient_DiscoveryClientFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE::ReportIdentificationTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE::ReportIdentificationTransition()"
                << std::endl;
        }


        return;
    }

    void DiscoveryClient_DiscoveryClientFSM_SM_Internally_Generated_State_DO_NOT_USE::ReportServiceListTransition(DiscoveryClient_DiscoveryClientFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE::ReportServiceListTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE::ReportServiceListTransition()"
                << std::endl;
        }


        return;
    }

    void DiscoveryClient_DiscoveryClientFSM_SM_Internally_Generated_State_DO_NOT_USE::ReportServicesTransition(DiscoveryClient_DiscoveryClientFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE::ReportServicesTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE::ReportServicesTransition()"
                << std::endl;
        }


        return;
    }

    void DiscoveryClient_DiscoveryClientFSM_SM_Internally_Generated_State_DO_NOT_USE::ReportSubsystemListTransition(DiscoveryClient_DiscoveryClientFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE::ReportSubsystemListTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : DiscoveryClient_DiscoveryClientFSM_SM::Internally_Generated_State_DO_NOT_USE::ReportSubsystemListTransition()"
                << std::endl;
        }


        return;
    }
}

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
